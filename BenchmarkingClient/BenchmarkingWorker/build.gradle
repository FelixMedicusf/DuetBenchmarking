plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'application'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.30'
}

apply plugin: 'application'

group = 'Tu-Berlin'
version = 'final-worker'

repositories {
    mavenCentral()
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}



dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-test:1.7.0'
    implementation 'com.datastax.cassandra:cassandra-driver-core:4.0.0'
    implementation 'com.datastax.cassandra:cassandra-driver-extras:3.11.2'
    implementation 'com.datastax.oss:java-driver-query-builder:4.14.1'
    implementation 'org.slf4j:slf4j-api:2.0.0-alpha4'
    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha4'

    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0-RC'
    implementation "ch.qos.logback:logback-classic:1.2.3"

}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    destinationDirectory.set(file("/jar/"))
    manifest {
        attributes "Main-Class": "MainKt"
    }

    from {

        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}



test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

application {
    mainClassName = 'MainKt'
}